{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Phonebook/Phonebook.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","addContact","onSubmit","props","id","shortid","generate","checkContactList","contacts","normalizedName","toLocaleLowerCase","find","contact","alert","onFormChange","target","value","setState","onSubmitForm","e","preventDefault","resetForm","this","className","s","form","label","htmlFor","nameInputId","span","input","type","placeholder","pattern","title","required","onChange","numberInputId","btn","Component","ContactList","onDeleteContact","ul","map","li","onClick","Filter","Phonebook","filter","deleteContact","contactId","prevState","formSubmitHandler","changeFilter","getFilteredContacts","normalizedFilter","includes","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","box","divBox","boxList","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03206a24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__210dv\",\"label\":\"ContactForm_label__3FUMU\",\"input\":\"ContactForm_input__3EDjH\",\"span\":\"ContactForm_span__2WmmD\",\"btn\":\"ContactForm_btn__3HGuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactList_li__1zV7T\",\"ul\":\"ContactList_ul__fWXFH\",\"btn\":\"ContactList_btn__3M8P2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__PYtOY\",\"span\":\"Filter_span__3rkOz\",\"input\":\"Filter_input__1eD-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Phonebook_title__2EbT1\",\"box\":\"Phonebook_box__31_GQ\",\"divBox\":\"Phonebook_divBox__Z9lig\",\"boxList\":\"Phonebook_boxList__2p9Bp\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  addContact = () => {\r\n    const { name, number } = this.state;\r\n    const { onSubmit } = this.props;\r\n    const newContactId = shortid.generate();\r\n    const newContact = { name, number, id: newContactId };\r\n    onSubmit(newContact);\r\n  };\r\n\r\n  checkContactList = () => {\r\n    const { contacts } = this.props;\r\n    const { name } = this.state;\r\n    const normalizedName = name.toLocaleLowerCase();\r\n    contacts.find(\r\n      contact => contact.name.toLocaleLowerCase() === normalizedName,\r\n    )\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.addContact();\r\n  };\r\n\r\n  onFormChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmitForm = e => {\r\n    e.preventDefault();\r\n    this.resetForm();\r\n    this.checkContactList();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.onSubmitForm}>\r\n        <label className={s.label} htmlFor={this.nameInputId}>\r\n          <span className={s.span}>Name</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Григор Григорян\"\r\n            value={name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onFormChange}\r\n            id={shortid.generate()}\r\n          />\r\n        </label>\r\n        <label className={s.label} htmlFor={this.numberInputId}>\r\n          <span className={s.span}>Number</span>\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"111-22-33\"\r\n            value={number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onFormChange}\r\n            id={shortid.generate()}\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.ul}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={s.li} key={id}>\r\n          {name}: {number}\r\n          <button className={s.btn} onClick={() => onDeleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      <span className={s.span}>Find contacts by name</span>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport s from './Phonebook.module.css';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\n\r\nclass Phonebook extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parseContacts = JSON.parse(contacts);\r\n    if (parseContacts) {\r\n      this.setState({ contacts: parseContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  formSubmitHandler = contact => {\r\n    const { contacts } = this.state;\r\n    this.setState({ contacts: [contact, ...contacts] });\r\n  };\r\n\r\n  changeFilter = ({ target }) => {\r\n    this.setState({ filter: target.value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      state,\r\n      formSubmitHandler,\r\n      changeFilter,\r\n      deleteContact,\r\n      getFilteredContacts,\r\n    } = this;\r\n    const { contacts, filter } = state;\r\n\r\n    return (\r\n      <div className={s.box}>\r\n        <div>\r\n          <h1 className={s.title}>Phonebook</h1>\r\n          <ContactForm onSubmit={formSubmitHandler} contacts={contacts} />\r\n        </div>\r\n        <div className={s.divBox}>\r\n          <h2 className={s.title}>Contacts</h2>\r\n          <div className={s.boxList}>\r\n            <Filter value={filter} onChange={changeFilter} />\r\n            <ContactList\r\n              contacts={getFilteredContacts()}\r\n              onDeleteContact={deleteContact}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Phonebook;\r\n","import './App.css';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\n\r\nfunction App() {\r\n  return (\r\n    <section className=\"container\">\r\n      <Phonebook />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}